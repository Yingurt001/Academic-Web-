name: Scrape Talk Locations

on:
  push:
    paths:
      - 'talks/**'
      - '_talks/**'
      - 'talkmap.ipynb'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: scrape-talks-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0              # ✅ 允许后面做 rebase

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter pandas requests beautifulsoup4 geopy
          pip install --upgrade getorg

      - name: Run Jupyter Notebook
        run: |
          jupyter nbconvert --to notebook --execute talkmap.ipynb --output talkmap_out.ipynb

      - name: Git config & auth
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # ✅ 确保 origin 用带 token 的地址
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Sync with remote (rebase to avoid non-FF)
        run: |
          git fetch origin ${{ github.ref_name }}
          # 如果落后远端，则 rebase；无差异则跳过
          if ! git diff --quiet HEAD origin/${{ github.ref_name }}; then
            git rebase origin/${{ github.ref_name }}
          fi

      - name: Stage & commit (if any)
        run: |
          git add -A
          git commit -m "Automated update of talk locations" || echo "No changes" && echo "skip_push=true" >> $GITHUB_ENV

      - name: Push
        if: env.skip_push != 'true'
        run: |
          # 正常推送；若你的分支保护允许，也可改为 --force-with-lease
          git push origin ${{ github.ref_name }}
